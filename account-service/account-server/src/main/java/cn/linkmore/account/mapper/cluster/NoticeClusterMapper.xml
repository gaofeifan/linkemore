<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.linkmore.account.dao.cluster.NoticeClusterMapper">
  <resultMap id="BaseResultMap" type="cn.linkmore.account.entity.Notice">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="push_time" jdbcType="TIMESTAMP" property="pushTime" />
    <result column="status" jdbcType="BIGINT" property="status" />
    <result column="content" jdbcType="VARCHAR" property="content" />
  </resultMap>
	   <resultMap id="ResPageNoticeBeanMap" type="cn.linkmore.account.response.ResPageNotice" >
      <id column="id" property="id" jdbcType="BIGINT" />
      <result column="id" property="id"/>
      <result column="title" property="title"/>
      <result column="push_time" property="pushTime"/>
      <result column="type" property="type"/>
      <result column="url" property="url"/>
      <result column="description" property="description"/>
    </resultMap>  
  <sql id="Base_Column_List">
    id, type, title, description, url, create_time, push_time, status
  </sql>
  <select id="findById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_notice
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="findNotReadCount" resultType="java.lang.Integer" parameterType="java.lang.Long"  >
   SELECT
	COUNT(rea.id)
  FROM
  t_notice_read rea
  WHERE rea.user_id = #{uid}
  </select>

  <select id="findPageNotice" resultMap="ResPageNoticeBeanMap" parameterType="java.util.HashMap"  >
   SELECT
	t.id,t.title,t.push_time,t.type,t.description,t.url
    FROM
        t_notice t
    LEFT JOIN t_notice_read r ON t.id = r.notice_id
     WHERE
      status = 0
     <!--  and  t.id NOT IN (
            SELECT
                nr.notice_id
            FROM
                t_notice_read nr
            WHERE

             nr.user_id = #{uid}
        ) -->
    GROUP BY t.id
    ORDER BY t.push_time desc
    limit #{start,jdbcType=BIGINT},10
  </select>

    <select id="findNotReadCountAll" resultType="java.lang.Integer">
       SELECT COUNT(t.id) count  FROM t_notice t  WHERE t.`status`=0
    </select>
    <select id="findNoticeReadByNid" parameterType="cn.linkmore.account.request.ReqNotice" resultMap="BaseResultMap">
     SELECT
	n.id,
	n.notice_id,
	n.user_id,
	n.create_time,
	n.delete_status,
	n.read_status,
	n.update_time
  FROM
      t_notice_read n
  WHERE n.notice_id = #{nid} AND n.user_id = #{userId}
    </select>
     <select id="findNoticeReadDel" resultType="java.lang.Long" parameterType="java.lang.Long"  >
    SELECT
    T.notice_id
    FROM
    t_notice_read T
    WHERE
    T.user_id = #{uid}
    AND  T.delete_status =0 AND T.read_status =1
  </select>
  
   <select id="findPage" resultMap="BaseResultMap" parameterType="java.util.HashMap">
     select 
     n.id, n.type, n.title, n.description, n.url, n.create_time, n.push_time, n.status ,nc.content
    from t_notice n inner join t_notice_content nc on n.id = nc.id where 1 = 1 
    <if test="category!=null">  
    and n.type = #{category}
    </if> 
    <if test="status!=null">  
    and n.status = #{status}
    </if> 
    <if test="title!=null">  
    and n.title like #{title}
    </if> 
    <if test="property==null">  
     order by id desc
    </if>
     <if test="property!=null">  
     order by ${property} ${direction}
    </if>
    limit  #{start,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
  </select>
  
  
  <select id="count"  resultType="java.lang.Integer" parameterType="java.util.HashMap">
    select count(1)
    from t_notice where 1 = 1 
    <if test="category!=null">  
    and type = #{category}
    </if> 
    <if test="status!=null">  
    and status = #{status}
    </if> 
    <if test="title!=null">  
    and title like #{title}
    </if> 
  </select>
  
   <select id="findNotReadNotice" parameterType="java.lang.Long" resultType="Integer">
   
SELECT
	count(t.id)
    FROM
        t_notice t
    LEFT JOIN t_notice_read r ON t.id = r.notice_id AND r.user_id = #{id}
     WHERE
      status = 0
      and  t.id NOT IN (
            SELECT
                nr.notice_id
            FROM
                t_notice_read nr
            WHERE

             nr.user_id = #{id}
        ) 
  </select>
   <select id="findNotReadList" parameterType="java.lang.Long" resultType="java.lang.Long">
   
SELECT
	t.id
    FROM
        t_notice t
    LEFT JOIN t_notice_read r ON t.id = r.notice_id AND r.user_id = #{id}
     WHERE
      status = 0
      and  t.id NOT IN (
            SELECT
                nr.notice_id
            FROM
                t_notice_read nr
            WHERE

             nr.user_id = #{id}
        ) 
  </select>
</mapper>