<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.linkmore.account.dao.master.NoticeReadMasterMapper">
  <resultMap id="BaseResultMap" type="cn.linkmore.account.entity.NoticeRead">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="notice_id" jdbcType="BIGINT" property="noticeId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="delete_status" jdbcType="BIGINT" property="deleteStatus" />
    <result column="read_status" jdbcType="BIGINT" property="readStatus" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, notice_id, user_id, create_time, delete_status, read_status, update_time
  </sql>
  <delete id="deleteById" parameterType="java.lang.Long">
    delete from t_notice_read
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="save" parameterType="cn.linkmore.account.entity.NoticeRead">
    insert into t_notice_read (id, notice_id, user_id, 
      create_time, delete_status, read_status, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{noticeId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{deleteStatus,jdbcType=BIGINT}, #{readStatus,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="saveSelective" parameterType="cn.linkmore.account.entity.NoticeRead">
    insert into t_notice_read
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="noticeId != null">
        notice_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="deleteStatus != null">
        delete_status,
      </if>
      <if test="readStatus != null">
        read_status,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="noticeId != null">
        #{noticeId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteStatus != null">
        #{deleteStatus,jdbcType=BIGINT},
      </if>
      <if test="readStatus != null">
        #{readStatus,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByIdSelective" parameterType="cn.linkmore.account.entity.NoticeRead">
    update t_notice_read
    <set>
      <if test="noticeId != null">
        notice_id = #{noticeId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteStatus != null">
        delete_status = #{deleteStatus,jdbcType=BIGINT},
      </if>
      <if test="readStatus != null">
        read_status = #{readStatus,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateById" parameterType="cn.linkmore.account.entity.NoticeRead">
    update t_notice_read
    set notice_id = #{noticeId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      delete_status = #{deleteStatus,jdbcType=BIGINT},
      read_status = #{readStatus,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateReadStatus">
    update t_notice_read
    set 
      read_status = 1
  </update>
</mapper>