<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.linkmore.common.dao.cluster.BaseAppVersionClusterMapper">
  <resultMap id="BaseResultMap" type="cn.linkmore.common.entity.BaseAppVersion">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="version" jdbcType="VARCHAR" property="version" />
    <result column="code" jdbcType="BIGINT" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="scope" jdbcType="INTEGER" property="scope" />
    <result column="update_status" jdbcType="INTEGER" property="updateStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap id="ResBaseResultMap" type="cn.linkmore.common.response.ResVersionBean">
    <result column="version" jdbcType="VARCHAR" property="version" />
    <result column="code" jdbcType="BIGINT" property="versionCode" />
    <result column="name" jdbcType="VARCHAR" property="versionName" />
    <result column="url" jdbcType="VARCHAR" property="downloadUrl" />
    <result column="update_status" jdbcType="INTEGER" property="mustUpdate" />
    <result column="description" jdbcType="VARCHAR" property="description" />
  </resultMap>
  <sql id="Base_Column_List">
    id, version, code, name, status, url, type, scope,update_status, create_time, description, 
    update_time
  </sql>
  <select id="findById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_base_app_version
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="findByTypeAnStatus" parameterType="java.util.Map" resultMap="ResBaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_base_app_version
    where type = #{appType} and status= #{status} and scope != 2
    order by code desc
  </select>
  <select id="findLast" parameterType="java.util.Map" resultMap="ResBaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_base_app_version
    where type = #{appType}
    order by code desc
    limit 0,1
  </select>
  
  <select id="findGrayLast" parameterType="java.util.Map" resultMap="ResBaseResultMap">
    select v.* from t_base_app_version v
	inner join t_base_app_version_group vg on v.id=vg.version_id and  v.scope=2 and v.type=#{appType} and v.status=1
	inner join t_user_group_detail gd on vg.user_group_id=gd.user_group_id and gd.user_id= #{userId}
	order by v.code desc 
	limit 0,1
  </select>
  
  <select id="findPage" resultMap="BaseResultMap"   parameterType="java.util.HashMap" >
  	select id, version, code, name, status, url, type, scope ,update_status, 
    create_time, description, update_time
    from t_base_app_version
    where 1 = 1
    <if test="name!=null">  
    and name like #{name,jdbcType=VARCHAR}
    </if> 
    <if test="code!=null">  
    and code = #{code,jdbcType=VARCHAR}
    </if> 
    <if test="type!=null">  
    and type = #{type,jdbcType=VARCHAR}
    </if> 
    <if test="property==null">  
     order by create_time desc
    </if>
    <if test="property!=null">  
    order by  ${property} ${direction}
    </if>
    limit  #{start,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
  </select>
   <select id="count" resultType="java.lang.Integer" parameterType="java.util.HashMap" >
    select count(1) 
    from t_base_app_version
    where 1 = 1
    <if test="name!=null">  
    and name like #{name,jdbcType=VARCHAR}
    </if> 
    <if test="code!=null">  
    and code = #{code,jdbcType=VARCHAR}
    </if> 
    <if test="type!=null">  
    and type = #{type,jdbcType=VARCHAR}
    </if> 
  </select>
   <select id="check" resultType="java.lang.Integer" parameterType="java.util.HashMap" >
    select count(1)
    from t_base_app_version
    where 
    ${property} = #{value}  
    and id != #{id} 
  </select>
</mapper>